// Code generated by protoc-gen-go.
// source: controller2Broker.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Controller2BrokerKey int32

const (
	Controller2BrokerKey_CreadtPartition Controller2BrokerKey = 0
	Controller2BrokerKey_DeletePartition Controller2BrokerKey = 1
)

var Controller2BrokerKey_name = map[int32]string{
	0: "CreadtPartition",
	1: "DeletePartition",
}
var Controller2BrokerKey_value = map[string]int32{
	"CreadtPartition": 0,
	"DeletePartition": 1,
}

func (x Controller2BrokerKey) String() string {
	return proto.EnumName(Controller2BrokerKey_name, int32(x))
}
func (Controller2BrokerKey) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Controller2Broker struct {
	Key        Controller2BrokerKey `protobuf:"varint,1,opt,name=key,enum=protocol.Controller2BrokerKey" json:"key,omitempty"`
	Partitions []*Partition         `protobuf:"bytes,2,rep,name=Partitions" json:"Partitions,omitempty"`
}

func (m *Controller2Broker) Reset()                    { *m = Controller2Broker{} }
func (m *Controller2Broker) String() string            { return proto.CompactTextString(m) }
func (*Controller2Broker) ProtoMessage()               {}
func (*Controller2Broker) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Controller2Broker) GetKey() Controller2BrokerKey {
	if m != nil {
		return m.Key
	}
	return Controller2BrokerKey_CreadtPartition
}

func (m *Controller2Broker) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func init() {
	proto.RegisterType((*Controller2Broker)(nil), "protocol.Controller2Broker")
	proto.RegisterEnum("protocol.Controller2BrokerKey", Controller2BrokerKey_name, Controller2BrokerKey_value)
}

func init() { proto.RegisterFile("controller2Broker.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xc9, 0x49, 0x2d, 0x32, 0x72, 0x2a, 0xca, 0xcf, 0x4e, 0x2d, 0xd2, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x52, 0xbc, 0xb9, 0xa9, 0xc5, 0xc5,
	0x89, 0xe9, 0xa9, 0x10, 0x09, 0xa5, 0x2a, 0x2e, 0x41, 0x67, 0x74, 0x3d, 0x42, 0x06, 0x5c, 0xcc,
	0xd9, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x72, 0x7a, 0x30, 0xbd, 0x7a, 0x18,
	0x2a, 0xbd, 0x53, 0x2b, 0x83, 0x40, 0x4a, 0x85, 0x8c, 0xb9, 0xb8, 0x02, 0x12, 0x8b, 0x4a, 0x32,
	0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x25, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x84, 0x11, 0x1a, 0xe1,
	0x72, 0x41, 0x48, 0xca, 0xb4, 0x1c, 0xb8, 0x44, 0xb0, 0x99, 0x28, 0x24, 0xcc, 0xc5, 0xef, 0x5c,
	0x94, 0x9a, 0x98, 0x52, 0x02, 0x57, 0x2b, 0xc0, 0x00, 0x12, 0x74, 0x49, 0xcd, 0x49, 0x2d, 0x49,
	0x45, 0x08, 0x32, 0x26, 0xb1, 0x81, 0x6d, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xed, 0x5e,
	0x2c, 0xc3, 0xf8, 0x00, 0x00, 0x00,
}
