// Code generated by protoc-gen-go.
// source: server2Client.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Server2ClientKey int32

const (
	Server2ClientKey_Success                 Server2ClientKey = 0
	Server2ClientKey_Error                   Server2ClientKey = 1
	Server2ClientKey_TopicExisted            Server2ClientKey = 2
	Server2ClientKey_TopicNotExisted         Server2ClientKey = 3
	Server2ClientKey_ChangeConsumerPartition Server2ClientKey = 4
	Server2ClientKey_PushMsg                 Server2ClientKey = 5
	Server2ClientKey_PublishSuccess          Server2ClientKey = 6
	Server2ClientKey_SendPartions            Server2ClientKey = 7
	Server2ClientKey_PriorityQueueFull       Server2ClientKey = 8
)

var Server2ClientKey_name = map[int32]string{
	0: "Success",
	1: "Error",
	2: "TopicExisted",
	3: "TopicNotExisted",
	4: "ChangeConsumerPartition",
	5: "PushMsg",
	6: "PublishSuccess",
	7: "SendPartions",
	8: "PriorityQueueFull",
}
var Server2ClientKey_value = map[string]int32{
	"Success":                 0,
	"Error":                   1,
	"TopicExisted":            2,
	"TopicNotExisted":         3,
	"ChangeConsumerPartition": 4,
	"PushMsg":                 5,
	"PublishSuccess":          6,
	"SendPartions":            7,
	"PriorityQueueFull":       8,
}

func (x Server2ClientKey) String() string {
	return proto.EnumName(Server2ClientKey_name, int32(x))
}
func (Server2ClientKey) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type Server2Client struct {
	Key              Server2ClientKey `protobuf:"varint,1,opt,name=key,enum=protocol.Server2ClientKey" json:"key,omitempty"`
	Msg              *Message         `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
	Partitions       []*Partition     `protobuf:"bytes,2,rep,name=Partitions" json:"Partitions,omitempty"`
	MsgPartitionName string           `protobuf:"bytes,4,opt,name=MsgPartitionName" json:"MsgPartitionName,omitempty"`
	MsgGroupName     string           `protobuf:"bytes,5,opt,name=MsgGroupName" json:"MsgGroupName,omitempty"`
	Topic            string           `protobuf:"bytes,6,opt,name=Topic" json:"Topic,omitempty"`
	RebalanceId      int32            `protobuf:"varint,7,opt,name=RebalanceId" json:"RebalanceId,omitempty"`
}

func (m *Server2Client) Reset()                    { *m = Server2Client{} }
func (m *Server2Client) String() string            { return proto.CompactTextString(m) }
func (*Server2Client) ProtoMessage()               {}
func (*Server2Client) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Server2Client) GetKey() Server2ClientKey {
	if m != nil {
		return m.Key
	}
	return Server2ClientKey_Success
}

func (m *Server2Client) GetMsg() *Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Server2Client) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *Server2Client) GetMsgPartitionName() string {
	if m != nil {
		return m.MsgPartitionName
	}
	return ""
}

func (m *Server2Client) GetMsgGroupName() string {
	if m != nil {
		return m.MsgGroupName
	}
	return ""
}

func (m *Server2Client) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Server2Client) GetRebalanceId() int32 {
	if m != nil {
		return m.RebalanceId
	}
	return 0
}

func init() {
	proto.RegisterType((*Server2Client)(nil), "protocol.Server2Client")
	proto.RegisterEnum("protocol.Server2ClientKey", Server2ClientKey_name, Server2ClientKey_value)
}

func init() { proto.RegisterFile("server2Client.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xdd, 0x8e, 0x9a, 0x40,
	0x14, 0xc7, 0x8b, 0x88, 0x1f, 0x07, 0xb5, 0xe3, 0xb1, 0x4d, 0x89, 0xbd, 0x21, 0xf6, 0x86, 0x98,
	0xc6, 0x0b, 0x7c, 0x04, 0x63, 0x9b, 0xa6, 0xc1, 0x50, 0xec, 0x0b, 0x20, 0x9e, 0xe0, 0xa4, 0xc0,
	0x98, 0x19, 0xa6, 0x59, 0x9f, 0x66, 0x5f, 0x63, 0x1f, 0x6f, 0xc3, 0x18, 0xbf, 0x76, 0xaf, 0x08,
	0xbf, 0xff, 0xef, 0x9c, 0x7f, 0xce, 0xc0, 0x44, 0x91, 0xfc, 0x4f, 0x32, 0x5c, 0x15, 0x9c, 0xaa,
	0x7a, 0x71, 0x94, 0xa2, 0x16, 0xd8, 0x33, 0x9f, 0x4c, 0x14, 0xd3, 0x61, 0x49, 0x4a, 0xa5, 0x39,
	0x9d, 0x83, 0xd9, 0x73, 0x0b, 0x86, 0xdb, 0xfb, 0x01, 0xfc, 0x0e, 0xf6, 0x3f, 0x3a, 0x79, 0x96,
	0x6f, 0x05, 0xa3, 0x70, 0xba, 0xb8, 0x0c, 0x2e, 0x1e, 0xac, 0xdf, 0x74, 0x4a, 0x1a, 0x0d, 0xbf,
	0x81, 0x5d, 0xaa, 0xdc, 0xb3, 0x7d, 0x2b, 0x70, 0xc3, 0xf1, 0xcd, 0x8e, 0xce, 0x2d, 0x49, 0x93,
	0xe2, 0x12, 0x20, 0x4e, 0x65, 0xcd, 0x6b, 0x2e, 0x2a, 0xe5, 0xb5, 0x7c, 0x3b, 0x70, 0xc3, 0xc9,
	0xcd, 0xbd, 0x66, 0xc9, 0x9d, 0x86, 0x73, 0x60, 0x91, 0xca, 0xaf, 0x60, 0x93, 0x96, 0xe4, 0xb5,
	0x7d, 0x2b, 0xe8, 0x27, 0xef, 0x38, 0xce, 0x60, 0x10, 0xa9, 0xfc, 0xa7, 0x14, 0xfa, 0x68, 0x3c,
	0xc7, 0x78, 0x0f, 0x0c, 0x3f, 0x81, 0xf3, 0x57, 0x1c, 0x79, 0xe6, 0x75, 0x4c, 0x78, 0xfe, 0x41,
	0x1f, 0xdc, 0x84, 0x76, 0x69, 0x91, 0x56, 0x19, 0xfd, 0xda, 0x7b, 0x5d, 0xdf, 0x0a, 0x9c, 0xe4,
	0x1e, 0xcd, 0x5f, 0x2c, 0x60, 0x6f, 0x6f, 0x47, 0x17, 0xba, 0x5b, 0x9d, 0x65, 0xa4, 0x14, 0xfb,
	0x80, 0x7d, 0x70, 0xd6, 0x52, 0x0a, 0xc9, 0x2c, 0x64, 0x30, 0x30, 0x7b, 0xd7, 0x4f, 0x5c, 0xd5,
	0xb4, 0x67, 0x2d, 0x9c, 0xc0, 0x47, 0x43, 0x36, 0xa2, 0xbe, 0x40, 0x1b, 0xbf, 0xc2, 0x97, 0xd5,
	0x21, 0xad, 0x72, 0x5a, 0x89, 0x4a, 0xe9, 0x92, 0xe4, 0xf5, 0x1c, 0xd6, 0x6e, 0x76, 0xc7, 0x5a,
	0x1d, 0x22, 0x95, 0x33, 0x07, 0x11, 0x46, 0xb1, 0xde, 0x15, 0x5c, 0x1d, 0x2e, 0x7d, 0x9d, 0xa6,
	0x64, 0x4b, 0xd5, 0xde, 0xcc, 0x88, 0x4a, 0xb1, 0x2e, 0x7e, 0x86, 0x71, 0x2c, 0xb9, 0x90, 0xbc,
	0x3e, 0xfd, 0xd1, 0xa4, 0xe9, 0x87, 0x2e, 0x0a, 0xd6, 0xdb, 0x75, 0xcc, 0x13, 0x2f, 0x5f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xb1, 0xb6, 0xbf, 0x09, 0x13, 0x02, 0x00, 0x00,
}
