// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RetStatus int32

const (
	RetStatus_Successs  RetStatus = 0
	RetStatus_Fail      RetStatus = 1
	RetStatus_QueueFull RetStatus = 2
)

var RetStatus_name = map[int32]string{
	0: "Successs",
	1: "Fail",
	2: "QueueFull",
}
var RetStatus_value = map[string]int32{
	"Successs":  0,
	"Fail":      1,
	"QueueFull": 2,
}

func (x RetStatus) String() string {
	return proto.EnumName(RetStatus_name, int32(x))
}
func (RetStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Message struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Priority int32  `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	Msg      []byte `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Message) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Message) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type InternalMessage struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Priority int32  `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	Msg      []byte `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Pos      int32  `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
	TryTimes int32  `protobuf:"varint,5,opt,name=tryTimes" json:"tryTimes,omitempty"`
	Timeout  int64  `protobuf:"varint,6,opt,name=timeout" json:"timeout,omitempty"`
}

func (m *InternalMessage) Reset()                    { *m = InternalMessage{} }
func (m *InternalMessage) String() string            { return proto.CompactTextString(m) }
func (*InternalMessage) ProtoMessage()               {}
func (*InternalMessage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *InternalMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *InternalMessage) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *InternalMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *InternalMessage) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *InternalMessage) GetTryTimes() int32 {
	if m != nil {
		return m.TryTimes
	}
	return 0
}

func (m *InternalMessage) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type Partition struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *Partition) Reset()                    { *m = Partition{} }
func (m *Partition) String() string            { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()               {}
func (*Partition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Partition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Partition) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Partitions struct {
	Partition []*Partition `protobuf:"bytes,1,rep,name=partition" json:"partition,omitempty"`
}

func (m *Partitions) Reset()                    { *m = Partitions{} }
func (m *Partitions) String() string            { return proto.CompactTextString(m) }
func (*Partitions) ProtoMessage()               {}
func (*Partitions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Partitions) GetPartition() []*Partition {
	if m != nil {
		return m.Partition
	}
	return nil
}

type ListenAddr struct {
	ClientListenAddr string `protobuf:"bytes,1,opt,name=clientListenAddr" json:"clientListenAddr,omitempty"`
	BrokerListenAddr string `protobuf:"bytes,2,opt,name=BrokerListenAddr" json:"BrokerListenAddr,omitempty"`
}

func (m *ListenAddr) Reset()                    { *m = ListenAddr{} }
func (m *ListenAddr) String() string            { return proto.CompactTextString(m) }
func (*ListenAddr) ProtoMessage()               {}
func (*ListenAddr) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ListenAddr) GetClientListenAddr() string {
	if m != nil {
		return m.ClientListenAddr
	}
	return ""
}

func (m *ListenAddr) GetBrokerListenAddr() string {
	if m != nil {
		return m.BrokerListenAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterType((*InternalMessage)(nil), "protocol.InternalMessage")
	proto.RegisterType((*Partition)(nil), "protocol.Partition")
	proto.RegisterType((*Partitions)(nil), "protocol.Partitions")
	proto.RegisterType((*ListenAddr)(nil), "protocol.ListenAddr")
	proto.RegisterEnum("protocol.RetStatus", RetStatus_name, RetStatus_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x90, 0x4d, 0x4e, 0xc3, 0x30,
	0x14, 0x84, 0x49, 0xd2, 0x9f, 0xe4, 0xd1, 0x42, 0x64, 0x36, 0x16, 0xab, 0x28, 0xab, 0xa8, 0x8b,
	0x4a, 0xb4, 0x07, 0x40, 0xb0, 0x28, 0x42, 0x02, 0x09, 0x5c, 0x2e, 0x60, 0xe2, 0xa7, 0xca, 0x22,
	0x89, 0x23, 0xfb, 0x65, 0xd1, 0x93, 0x70, 0x5d, 0x14, 0x97, 0xb4, 0x48, 0xdd, 0xb2, 0xf2, 0xcc,
	0xe7, 0x19, 0x6b, 0x64, 0x98, 0xd7, 0xe8, 0x9c, 0xdc, 0xe1, 0xb2, 0xb5, 0x86, 0x0c, 0x8b, 0xfd,
	0x51, 0x9a, 0x2a, 0x7f, 0x82, 0xe9, 0xeb, 0xe1, 0x8a, 0x5d, 0x41, 0xa8, 0x15, 0x0f, 0xb2, 0xa0,
	0x18, 0x8b, 0x50, 0x2b, 0x76, 0x0b, 0x71, 0x6b, 0xb5, 0xb1, 0x9a, 0xf6, 0x3c, 0xf4, 0xf4, 0xe8,
	0x59, 0x0a, 0x51, 0xed, 0x76, 0x3c, 0xca, 0x82, 0x62, 0x26, 0x7a, 0x99, 0x7f, 0x07, 0x70, 0xfd,
	0xdc, 0x10, 0xda, 0x46, 0x56, 0xff, 0xf2, 0x62, 0x4f, 0x5a, 0xe3, 0xf8, 0xc8, 0x07, 0x7b, 0xd9,
	0xf7, 0xc9, 0xee, 0x3f, 0x74, 0x8d, 0x8e, 0x8f, 0x0f, 0xfd, 0xc1, 0x33, 0x0e, 0x53, 0xd2, 0x35,
	0x9a, 0x8e, 0xf8, 0x24, 0x0b, 0x8a, 0x48, 0x0c, 0x36, 0x5f, 0x43, 0xf2, 0x26, 0x2d, 0x69, 0xd2,
	0xa6, 0x61, 0x0c, 0x46, 0x8d, 0xac, 0xd1, 0x8f, 0x4a, 0x84, 0xd7, 0x3d, 0x93, 0x4a, 0x59, 0x3f,
	0x29, 0x11, 0x5e, 0xe7, 0xf7, 0x00, 0xc7, 0x92, 0x63, 0x77, 0x90, 0xb4, 0x83, 0xe3, 0x41, 0x16,
	0x15, 0x97, 0xab, 0x9b, 0xe5, 0xf0, 0x87, 0xcb, 0x63, 0x50, 0x9c, 0x52, 0xb9, 0x02, 0x78, 0xd1,
	0x8e, 0xb0, 0x79, 0x50, 0xca, 0xb2, 0x05, 0xa4, 0x65, 0xa5, 0xb1, 0xa1, 0x13, 0xfb, 0x9d, 0x70,
	0xc6, 0xfb, 0xec, 0xa3, 0x35, 0x5f, 0x68, 0xff, 0x64, 0x0f, 0xd3, 0xce, 0xf8, 0x62, 0x05, 0x89,
	0x40, 0xda, 0x92, 0xa4, 0xce, 0xb1, 0x19, 0xc4, 0xdb, 0xae, 0x2c, 0xd1, 0x39, 0x97, 0x5e, 0xb0,
	0x18, 0x46, 0x1b, 0xa9, 0xab, 0x34, 0x60, 0x73, 0x48, 0xde, 0x3b, 0xec, 0x70, 0xd3, 0x55, 0x55,
	0x1a, 0x7e, 0x4e, 0xfc, 0xf0, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x25, 0x41, 0xe9,
	0x14, 0x02, 0x00, 0x00,
}
