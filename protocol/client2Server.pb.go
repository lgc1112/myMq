// Code generated by protoc-gen-go.
// source: client2Server.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	client2Server.proto
	server2Client.proto

It has these top-level messages:
	Client2Server
	Message
	Server2Client
	Partition
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Client2ServerKey int32

const (
	Client2ServerKey_CreatTopic            Client2ServerKey = 0
	Client2ServerKey_GetPublisherPartition Client2ServerKey = 1
	Client2ServerKey_Publish               Client2ServerKey = 2
	Client2ServerKey_GetConsumerPartition  Client2ServerKey = 3
	Client2ServerKey_SubscribePartion      Client2ServerKey = 4
	Client2ServerKey_SubscribeTopic        Client2ServerKey = 5
	Client2ServerKey_RegisterConsumer      Client2ServerKey = 6
	Client2ServerKey_UnRegisterConsumer    Client2ServerKey = 7
	Client2ServerKey_ConsumeSuccess        Client2ServerKey = 8
)

var Client2ServerKey_name = map[int32]string{
	0: "CreatTopic",
	1: "GetPublisherPartition",
	2: "Publish",
	3: "GetConsumerPartition",
	4: "SubscribePartion",
	5: "SubscribeTopic",
	6: "RegisterConsumer",
	7: "UnRegisterConsumer",
	8: "ConsumeSuccess",
}
var Client2ServerKey_value = map[string]int32{
	"CreatTopic":            0,
	"GetPublisherPartition": 1,
	"Publish":               2,
	"GetConsumerPartition":  3,
	"SubscribePartion":      4,
	"SubscribeTopic":        5,
	"RegisterConsumer":      6,
	"UnRegisterConsumer":    7,
	"ConsumeSuccess":        8,
}

func (x Client2ServerKey) String() string {
	return proto.EnumName(Client2ServerKey_name, int32(x))
}
func (Client2ServerKey) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// this is a comment
type Client2Server struct {
	Key          Client2ServerKey `protobuf:"varint,1,opt,name=key,enum=protocol.Client2ServerKey" json:"key,omitempty"`
	Topic        string           `protobuf:"bytes,2,opt,name=Topic" json:"Topic,omitempty"`
	Partition    string           `protobuf:"bytes,3,opt,name=Partition" json:"Partition,omitempty"`
	GroupName    string           `protobuf:"bytes,4,opt,name=GroupName" json:"GroupName,omitempty"`
	PartitionNum int32            `protobuf:"varint,5,opt,name=PartitionNum" json:"PartitionNum,omitempty"`
	Msg          *Message         `protobuf:"bytes,6,opt,name=msg" json:"msg,omitempty"`
}

func (m *Client2Server) Reset()                    { *m = Client2Server{} }
func (m *Client2Server) String() string            { return proto.CompactTextString(m) }
func (*Client2Server) ProtoMessage()               {}
func (*Client2Server) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Client2Server) GetKey() Client2ServerKey {
	if m != nil {
		return m.Key
	}
	return Client2ServerKey_CreatTopic
}

func (m *Client2Server) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Client2Server) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Client2Server) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *Client2Server) GetPartitionNum() int32 {
	if m != nil {
		return m.PartitionNum
	}
	return 0
}

func (m *Client2Server) GetMsg() *Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Message struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Priority int32  `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	Msg      []byte `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Message) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*Client2Server)(nil), "protocol.Client2Server")
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterEnum("protocol.Client2ServerKey", Client2ServerKey_name, Client2ServerKey_value)
}

func init() { proto.RegisterFile("client2Server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcd, 0x6e, 0xda, 0x40,
	0x14, 0x85, 0x3b, 0x36, 0xe6, 0xe7, 0x42, 0xad, 0xe9, 0x2d, 0xad, 0x5c, 0xd4, 0x85, 0x45, 0x37,
	0x56, 0x55, 0xb1, 0xa0, 0x8f, 0xc0, 0xc2, 0x8b, 0x28, 0x08, 0x99, 0xe4, 0x01, 0x6c, 0x73, 0x45,
	0x46, 0xc1, 0x1e, 0x6b, 0x66, 0x1c, 0x89, 0xb7, 0xcc, 0x32, 0x8f, 0x13, 0x79, 0x0c, 0x06, 0x92,
	0x95, 0x75, 0xce, 0xf9, 0x74, 0x7c, 0xee, 0xc0, 0xf7, 0xfc, 0x20, 0xa8, 0x34, 0xcb, 0x2d, 0xa9,
	0x17, 0x52, 0x8b, 0x4a, 0x49, 0x23, 0x71, 0x68, 0x3f, 0xb9, 0x3c, 0xcc, 0xdf, 0x18, 0x7c, 0x5d,
	0x5d, 0x13, 0xf8, 0x0f, 0xdc, 0x67, 0x3a, 0x06, 0x2c, 0x64, 0x91, 0xbf, 0x9c, 0x2d, 0xce, 0xe4,
	0xe2, 0x86, 0xba, 0xa3, 0x63, 0xd2, 0x60, 0x38, 0x05, 0xef, 0x41, 0x56, 0x22, 0x0f, 0x9c, 0x90,
	0x45, 0xa3, 0xa4, 0x15, 0xf8, 0x1b, 0x46, 0x9b, 0x54, 0x19, 0x61, 0x84, 0x2c, 0x03, 0xd7, 0x26,
	0x17, 0xa3, 0x49, 0x63, 0x25, 0xeb, 0x6a, 0x9d, 0x16, 0x14, 0xf4, 0xda, 0xb4, 0x33, 0x70, 0x0e,
	0x93, 0x0e, 0x5d, 0xd7, 0x45, 0xe0, 0x85, 0x2c, 0xf2, 0x92, 0x1b, 0x0f, 0xff, 0x80, 0x5b, 0xe8,
	0x7d, 0xd0, 0x0f, 0x59, 0x34, 0x5e, 0x7e, 0xbb, 0x6c, 0xbc, 0x27, 0xad, 0xd3, 0x3d, 0x25, 0x4d,
	0x3a, 0x8f, 0x61, 0x70, 0xd2, 0xe8, 0x83, 0x23, 0x76, 0xf6, 0x24, 0x2f, 0x71, 0xc4, 0x0e, 0x67,
	0x30, 0xac, 0x94, 0x90, 0x4a, 0x98, 0xa3, 0x1d, 0xee, 0x25, 0x9d, 0x46, 0xde, 0x76, 0x37, 0xab,
	0x27, 0xb6, 0xe8, 0xef, 0x2b, 0x03, 0xfe, 0xf1, 0x7a, 0xf4, 0x01, 0x56, 0x8a, 0x52, 0x63, 0x0f,
	0xe6, 0x5f, 0xf0, 0x17, 0xfc, 0x88, 0xc9, 0x6c, 0xea, 0xec, 0x20, 0xf4, 0x13, 0xa9, 0x6e, 0x2e,
	0x67, 0x38, 0x86, 0xc1, 0xc9, 0xe7, 0x0e, 0x06, 0x30, 0x8d, 0xc9, 0xac, 0x64, 0xa9, 0xeb, 0xe2,
	0x1a, 0x73, 0x71, 0x0a, 0x7c, 0x5b, 0x67, 0x3a, 0x57, 0x22, 0x23, 0xeb, 0xcb, 0x92, 0xf7, 0x10,
	0xc1, 0xef, 0xdc, 0xf6, 0x5f, 0x5e, 0x43, 0x26, 0xb4, 0x17, 0xda, 0x90, 0x3a, 0x17, 0xf1, 0x3e,
	0xfe, 0x04, 0x7c, 0x2c, 0x3f, 0xf9, 0x83, 0xa6, 0xe1, 0xa4, 0xb6, 0x75, 0x9e, 0x93, 0xd6, 0x7c,
	0x98, 0xf5, 0xed, 0x93, 0xfd, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x8d, 0xfd, 0x37, 0x1e,
	0x02, 0x00, 0x00,
}
