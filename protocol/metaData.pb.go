// Code generated by protoc-gen-go.
// source: metaData.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MetaData struct {
	Topics []*Topic `protobuf:"bytes,1,rep,name=topics" json:"topics,omitempty"`
	Groups []*Group `protobuf:"bytes,2,rep,name=groups" json:"groups,omitempty"`
}

func (m *MetaData) Reset()                    { *m = MetaData{} }
func (m *MetaData) String() string            { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()               {}
func (*MetaData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *MetaData) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *MetaData) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Topic struct {
	Name       string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Partitions []*Partition `protobuf:"bytes,2,rep,name=partitions" json:"partitions,omitempty"`
}

func (m *Topic) Reset()                    { *m = Topic{} }
func (m *Topic) String() string            { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()               {}
func (*Topic) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *Topic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Topic) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type Group struct {
	Name             string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	RebalanceID      int32    `protobuf:"varint,2,opt,name=rebalanceID" json:"rebalanceID,omitempty"`
	SubscribedTopics []string `protobuf:"bytes,3,rep,name=subscribedTopics" json:"subscribedTopics,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetRebalanceID() int32 {
	if m != nil {
		return m.RebalanceID
	}
	return 0
}

func (m *Group) GetSubscribedTopics() []string {
	if m != nil {
		return m.SubscribedTopics
	}
	return nil
}

func init() {
	proto.RegisterType((*MetaData)(nil), "protocol.MetaData")
	proto.RegisterType((*Topic)(nil), "protocol.Topic")
	proto.RegisterType((*Group)(nil), "protocol.Group")
}

func init() { proto.RegisterFile("metaData.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x4d, 0x6b, 0xc4, 0x20,
	0x10, 0x86, 0x71, 0xd3, 0x2c, 0xbb, 0xb3, 0xf4, 0x03, 0x7b, 0x91, 0x9e, 0x24, 0x97, 0x4a, 0x0f,
	0x39, 0x74, 0xff, 0xc2, 0x42, 0xe9, 0xa1, 0xb0, 0x48, 0x8e, 0xbd, 0x8c, 0x56, 0x82, 0x90, 0x44,
	0x51, 0xf3, 0xff, 0x4b, 0x4c, 0x42, 0x43, 0xdb, 0x93, 0xf2, 0x3e, 0xcf, 0xbc, 0x3a, 0x70, 0xd7,
	0x9b, 0x84, 0x17, 0x4c, 0x58, 0xfb, 0xe0, 0x92, 0xa3, 0x87, 0x7c, 0x68, 0xd7, 0x3d, 0xdd, 0xf6,
	0x26, 0x46, 0x6c, 0xcd, 0x0c, 0xaa, 0x4f, 0x38, 0x7c, 0x2c, 0x2a, 0x7d, 0x86, 0x7d, 0x72, 0xde,
	0xea, 0xc8, 0x08, 0x2f, 0xc4, 0xe9, 0xf5, 0xbe, 0x5e, 0xa7, 0xea, 0x66, 0xca, 0xe5, 0x82, 0x27,
	0xb1, 0x0d, 0x6e, 0xf4, 0x91, 0xed, 0x7e, 0x8b, 0x6f, 0x53, 0x2e, 0x17, 0x5c, 0x5d, 0xa1, 0xcc,
	0x93, 0x94, 0xc2, 0xcd, 0x80, 0xbd, 0x61, 0x84, 0x13, 0x71, 0x94, 0xf9, 0x4e, 0xcf, 0x00, 0x1e,
	0x43, 0xb2, 0xc9, 0xba, 0x61, 0x6d, 0x7a, 0xfc, 0x69, 0xba, 0xae, 0x4c, 0x6e, 0xb4, 0xca, 0x42,
	0x99, 0x9f, 0xf8, 0xb7, 0x91, 0xc3, 0x29, 0x18, 0x85, 0x1d, 0x0e, 0xda, 0xbc, 0x5f, 0xd8, 0x8e,
	0x13, 0x51, 0xca, 0x6d, 0x44, 0x5f, 0xe0, 0x21, 0x8e, 0x2a, 0xea, 0x60, 0x95, 0xf9, 0x6a, 0xe6,
	0x65, 0x0b, 0x5e, 0x88, 0xa3, 0xfc, 0x93, 0xab, 0x7d, 0xfe, 0xca, 0xf9, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0xcf, 0x7e, 0x16, 0xe8, 0x4c, 0x01, 0x00, 0x00,
}
